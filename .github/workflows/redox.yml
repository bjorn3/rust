name: Build rustc for Redox OS

on:
  - push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Redox OS build toolchain
        run: |
          mkdir .redoxer
          docker pull redoxos/redoxer
          docker run -w "/foo" -v "$(pwd)/.redoxer:/foo/.redoxer" -e "HOME=/foo" redoxos/redoxer redoxer toolchain
          ls -lR .redoxer

      - name: Setup rustc_codegen_cranelift
        run: |
          pushd compiler/rustc_codegen_cranelift
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          ./y.rs prepare
          ./y.rs build
          popd
          ls -lR compiler/rustc_codegen_cranelift/build
          cp compiler/rustc_codegen_cranelift/rust-toolchain ./

      - name: Build
        run: |
          cat > config.toml <<EOF
          changelog-seen = 2
          
          [llvm]
          ninja = false

          [build]
          host = ["x86_64-unknown-redox"]
          target = ["x86_64-unknown-redox"]
          cargo = "$(rustup which cargo)"
          rustc = "compiler/rustc_codegen_cranelift/build/bin/cg_clif"
          local-rebuild = true
          
          [install]
          prefix = "redox_rustc"
          
          [rust]
          codegen-backends = ["cranelift"]
          deny-warnings = false

          [target.x86_64-unknown-linux-gnu]
          cc = "$(pwd)/.redoxer/bin/x86_64-unknown-redox-gcc"

          [dist]

          EOF
          rustup run nightly-2021-08-07 ./x.py install
          ls -lR redox_rustc

      - name: Package rustc
        run: tar cvfJ redox_rustc.tar.xz redox_rustc

      - name: Upload rustc
        uses: actions/upload-artifact@v2
        with:
          name: redox_rustc
          path: redox_rustc.tar.xz
